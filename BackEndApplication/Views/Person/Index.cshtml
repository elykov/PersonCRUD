
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Persons"; 
}

<style>
    .card {
        background-color: #303030;
        display: block;
        padding: 6px;
        margin: 10px;
        border: 2.5px solid #696969;
        border-radius: 8px;
    }

    .card span {
        font-size: 16px;
        vertical-align: baseline;
    }

    .card label {
        font-size: 18px;
        font-weight: 800;
    }

    .justify-space-around {
        display: flex;
        justify-content: space-around;
    }

    #name-header{
        font-size: 20px;
    }

    .table-hover tbody tr:hover td, .table-hover tbody tr:hover th {
        background-color: dimgray;
    }

    .table > tbody > tr > td {
        padding: 3px;
        vertical-align: middle;
    }

    .table-hover tbody tr:hover .unhov {
        background-color: #333;
    }

    .table {
        margin-bottom: 5px;
    }

    .btn-wide {
        width: 30%;
        padding-left: 5%;
        padding-right: 5%;
    }

    .pers-row {
        display: flex;
        align-items: center;
    }

    .card-box {
        display: inline-block;
        vertical-align: middle;
        float: none; /* работает, но получается максимум 2 карточки в строке */
        align-self: center !important;
        padding-left: 0px;
        padding-right: 0px;
    }

    @@media (min-width: 768px) {
        .col-sm-6 {
            width: 49%;
        }
    }

    @@media (min-width: 1200px) {
        .col-lg-4 {
            width: 33%;
        }
    }

</style>

<div class="text-center">
    <h2>This is test project which implements CRUD operations for object Person.</h2>
    <h4>Application uses WebAPI to manage data. Know more on 
    <a href="http://hapi.fhir.org/resource?encoding=null&pretty=true&resource=Person">this site</a>.
    <br />
    If you want know more about person <a href="http://www.hl7.org/fhir/person.html#resource">click here</a>.</h4>
    <h3>To <a href="/Person/Edit" class="btn btn-primary btn-lg">Create new person</a> click this button.</h3>
</div>
<br />
<div class="container">
    @* Принято решение не показывать много информации на начальной странице,
        потому что это бессмысленно - не зачем вся информация сразу о всех. Также это слишком громоздко 
        Также дизайн не из лучших, можно сделать красивее и функциональнее, но идей нет.    
    *@

    <div id="all-persons" style="display: none;" data-bind="visible: persons().length != 0">
        <div class="row" data-bind="foreach: persons">
            <div class="col-xs-12 col-sm-6 col-lg-4 card-box" data-bind="attr: { id: resource.id }">
                <div class="card text-center">
                    <table class="table table-bordered table-hover text-center">
                        <tbody>
                            <!-- ko if: resource.id -->
                            <tr>
                                <td>
                                    <label>Person Id</label>
                                </td>
                                <td>
                                    <span data-bind="text: resource.id"></span>
                                </td>
                            </tr>
                            <!-- /ko -->
                            <!-- ko if: resource.gender -->
                            <tr>
                                <td>
                                    <label>Gender</label>
                                </td>
                                <td>
                                    <span data-bind="text: resource.gender"></span>
                                </td>
                            </tr>
                            <!-- /ko -->
                            <!-- ko if: resource.birthDate -->
                            <tr>
                                <td>
                                    <label>
                                        BirthDate
                                    </label>
                                </td>
                                <td>
                                    <span data-bind="text: resource.birthDate"></span>
                                </td>
                            </tr>
                            <!-- /ko -->

                            <tr>
                                <td class="unhov" colspan="2">
                                    <div id="name-header">Person names</div>
                                </td>
                            </tr>
                        </tbody>
                        <!-- ko if: resource.name -->
                        <tbody data-bind="foreach: { data: getNames($data), as: 'nameType'}">
                            <tr>
                                <td>
                                    <label>
                                        <span data-bind="text: nameType.use"></span>
                                    </label>
                                </td>
                                <td>
                                   <span data-bind="text: nameType.name"></span>
                                </td>
                            </tr>
                        </tbody>
                        <!-- /ko -->
                    </table>

                    <div class="justify-space-around">
                        <a class="btn btn-primary btn-wide" data-bind="attr: { href: '/Person/Edit/' + resource.id}">Edit</a>
                        <button class="btn btn-danger btn-wide" data-bind="click: deletePerson.bind($data)">Delete</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @*<div>
            <!-- ko if: resource.id -->
            <span data-bind="text: `Person Id: ${resource.id}`"></span>
            <!-- /ko -->
            <!-- ko if: resource.gender -->
            <span data-bind="text: `Gender: ${resource.gender}`"></span>
            <!-- /ko -->
        </div>
        <!-- ko if: resource.birthDate -->
        <div>
            <span data-bind="text: `BirthDate: ${resource.birthDate}`"></span>
        </div>
        <!-- /ko -->
        <!-- ko if: resource.name -->
        <label class="fieldName">Names</label>
        <div class="row table table-bordered info-table" data-bind="foreach: { data: getNames($data), as: 'nameType'}">
            <div class="col-sm-4 info-table-elem">
                <span data-bind="text: nameType.use"></span>
            </div>
            <div class="col-sm-8 info-table-elem">
                <span data-bind="text: nameType.name"></span>
            </div>
        </div>
        <!-- /ko -->*@

    @*<!-- ko if: resource.telecom -->
        <label class="fieldName">Telecom</label>
        <div class="row table table-bordered info-table" data-bind="foreach: { data: resource.telecom, as: 'tel'}">
            <!-- ko if: tel.value -->
            <div class="col-sm-4 info-table-elem">
                <span data-bind="text: `${tel.use} ${tel.system}`"></span>
            </div>
            <div class="col-sm-8 info-table-elem">
                <span data-bind="text: tel.value"></span>
            </div>
            <!-- /ko -->
        </div>
        <!-- /ko -->*@

    @*<table class="table table-bordered table-hover text-center">
            <tbody>
                <tr>
                    <td></td>
                </tr>
                <tr>
                    <td></td>
                </tr>
            </tbody>
        </table>*@

</div>
@section Scripts {
    <script type="text/javascript">
        $(() => {
            const siteUrl = "https://hapi.fhir.org/baseR4/Person";
            var self = this;
            self.persons = null;
            loadData();

            function loadData() {
                $.ajax({
                    url: siteUrl,
                    type: 'GET',
                    //contentType: "application/json",
                    success: function (data) {
                        //console.log(data);
                        console.log(data.entry);

                        for (var pers of data.entry) {
                            for (var index in pers.resource.telecom) {
                                if (pers.resource.telecom[index].system)
                                    pers.resource.telecom[index].system = capitalize(pers.resource.telecom[index].system);
                                if (pers.resource.telecom[index].use)
                                    pers.resource.telecom[index].use = capitalize(pers.resource.telecom[index].use);
                            }
                        }

                        self.persons = ko.observableArray(data.entry);
                        ko.applyBindings(self);
                    },
                    error: function (data) {
                        alert("error");
                        console.log(data);
                    }
                });
            }

            function capitalize(text) {
                return text.charAt(0).toUpperCase() + text.slice(1);
            }

            function existsString(text, another) {
                return text ? text : another;
            }

            function strConstructor(vari) {
                let res = "";
                for (var index in vari) {
                    res += " " + vari[index];
                }
                return res;
            };



            
            // Было принято решение возвращать имя строкой, потому что так код получается понятнее и менее громоздким
            self.getNames = function (pers) {
                function formNames(nm) {
                    let prefName = strConstructor(nm.prefix);
                    let givenName = strConstructor(nm.given);
                    let suffName = strConstructor(nm.suffix);
                    return {
                        use: capitalize(existsString(nm.use, 'Name')),
                        name: `${existsString(nm.family, '')}${prefName}${givenName}${suffName}`
                    };
                    //return `${capitalize(existsString(nm.use, 'Name'))}: ${existsString(nm.family, '')}${prefName}${givenName}${suffName}; `;
                }

                //console.log(pers.resource.name);
                let fullName = [];
                if (pers.resource.name) {
                    if (pers.resource.name.fullName) {
                        fullName = [pers.resource.name.fullName];
                    }
                    else {
                        for (var nm of pers.resource.name) {
                            fullName.push(formNames(nm));    
                        }
                    }
                }
                else {
                    return null;
                }

                return ko.observableArray(fullName);
            }

            //self.getTelecoms = function (pers) {
            //    function formTelecoms(nm) {
            //        return {
            //            use: capitalize(existsString(nm.use, 'Name')),
            //            name: `${existsString(nm.family, '')}${prefName}${givenName}${suffName}`
            //        };
            //    }

            //    let telecoms = [];
            //    for (var nm of pers.resource.telecom) {
            //        telecoms.push(formTelecoms(nm));
            //    }

            //    return ko.observableArray(fullName);
            //}

            self.deletePerson = function (pers) {
                let id = pers.resource.id;
                console.log(id);

                if (confirm(`You sure you want to delete this person with Id = ${id}?`)) {
                    $.ajax({
                        url: siteUrl + `/${id}`, // fullUrl не работает если подключение https
                        type: 'DELETE',
                        contentType: "application/json",
                        data: { id: id },
                        success: (data) => {
                            alert("Delete query succussful! Person will be deleted soon.");
                            self.persons.remove(pers);
                            console.log(data);
                        },
                        error: (data) => {
                            alert("error");
                            console.log(data);
                        }
                    });
                }
            }
        });
    </script>
}